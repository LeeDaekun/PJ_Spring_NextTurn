<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nextturn.persistence.BoardDAO">
		
	<select id="iboardList" resultType="BoardDTO">
		SELECT bno, title, type, writer, name, b.regdate, updatedate, viewcnt, replycnt, goodcnt, show, filecnt, ref, re_step, re_level
		FROM tbl_board b, tbl_member m
		<if test="map.type == 'free'">
			WHERE type = 'free' AND 5 >=rownum
		</if>
		<if test="map.type == 'noti'">
			WHERE type = 'noti' AND 5 >=rownum
		</if>
		<if test="map.type == 'revi'">
			WHERE type = 'revi' AND 5 >=rownum
		</if>
				
		ORDER BY ref DESC, re_step ASC
	</select>	
	<!-- rownum 쓸때 AND 5 <=rownum 이렇게 꺽쇠 방향이 바뀌면 mapper에서 에러가 납니다-->
		
		
		
		
		
		
	<!-- 계정이 있는 사용자의 게시글만 띄우기 -->
	<!-- 보드와 회원가입한 사람의 이름이 같고, 보드에서 show가 y인 게시글만 출력하라-->
	<!-- 정렬방법에 동적쿼리 if문 적용 -->
	
	<!-- 페이징 헤더  -->		
	<sql id="paging_header">
		SELECT *
		FROM (
			SELECT rownum AS rnum, A.*
			FROM (
	</sql>
	<!-- 인클루드 쿼리문 적용 -->
	<select id="boardList" resultType="BoardDTO">
		<include refid="paging_header"/>
		SELECT bno, title, video_code, video_img, writer, name, b.regdate, updatedate, viewcnt, replycnt, goodcnt, show, filecnt, ref, re_step, re_level
		FROM tbl_board b, tbl_member m
		
		<include refid="search"/>
		
		<if test="map.sort_option == 'new'">
			ORDER BY ref DESC, re_step ASC
		</if>
		<if test="map.sort_option == 'cnt'">
			ORDER BY viewcnt DESC
		</if>
		<if test="map.sort_option == 'reply'">
			ORDER BY replycnt DESC
		</if>
		<if test="map.sort_option == 'good'">
			ORDER BY goodcnt DESC
		</if>
		<include refid="paging_footer"/>
	</select>
	

<!-- 페이징 푸터 -->	
	<sql id="paging_footer">
			) A
		) WHERE rnum BETWEEN #{map.start} AND #{map.end}
	</sql>
	

<!-- ■■■■■출력할 게시글 타입 설정 ■■■■■■■■■통합검색(게시글 출력용) 하라고 만든 SQL (작성자와,가입한사람이 있는정보중 show가 y인 사람의 글중에 통합검색)-->	
	<sql id="search">
		WHERE b.writer = m.name
				  AND b.show = 'y'
				  AND (title LIKE #{map.keyword}
				  OR search_content LIKE #{map.keyword}
				  OR name LIKE #{map.keyword})
  			
  			<if test="map.list_type == 'noti'">
				AND type = 'noti'
			</if>
			<if test="map.list_type == 'rull'">
				AND type = 'rull'
			</if>
			<if test="map.list_type == 'free'">
				AND type = 'free'
			</if>
			<if test="map.list_type == 'revi'">
				AND type = 'revi'
			</if>

	</sql>



	
	
	
	
	<!-- 모든 갯수를 구해라, 보드의 작성자와 가입한맴버가 일치하는 사람중에, show 가 y인 사람것 중에서 -->
	<!-- 검색어 키워드 입력된것 찾아라 (제목,컨텐츠, 이름 중에서 검색) -->	
	<select id="countArticle" resultType="Integer">
		SELECT COUNT(*)
		FROM tbl_board b, tbl_member m
		<include refid="search"/>
	</select>
	
	
	<select id="boardView" resultType="BoardDTO">
		SELECT * FROM tbl_board
		WHERE bno = #{param1}
	</select>
	
	<!-- 게시글 클릭했을때 조회수 증가 -->
	<update id="increaseViewCnt">
		UPDATE tbl_board
		SET viewcnt = viewcnt + 1
		WHERE bno = #{bno}
	</update>
	
	<update id="delBoard">
		UPDATE tbl_board
		SET show = 'n'
		WHERE bno = #{bno}
	</update>
	
	<!-- Dao에서 해쉬맵을 @param("map") serviceImpl에서 해쉬맵 키값 문자가 tyep 이라고 써진부분 벨류값이 minus 이거나 plus 일때  (동적쿼리)-->
	<update id="replyCntUpdate">
		UPDATE tbl_board
		<if test="map.type == 'plus'">
		SET replycnt = replycnt + 1
		</if>
		<if test="map.type == 'minus'">
		SET replycnt = replycnt - 1
		</if>
		WHERE bno = #{map.bno}
	</update>
	
	
	<!-- 게시글 등록  + 동시에 시퀀스 번호를 커랜트벨로 알아내서, 등록된 게시글을 들어갈 수 있게 한다.-->
	<!-- parameterType="BoardDTO" 을 생략해도 된다 -->
	<!-- order="AFTER" 는 위에꺼 처리 후에 실행되라 는말 -->
	<!-- KeyProperty="bno" 는  DTO에서 넘어온 bno를 다시 bno에 새로 담아준다 -->
	<!-- seq_board.CURRVAL 이거는 등록'될' 게시글의 시퀀스를 그대로 가져온다 -->
	<insert id="write" parameterType="BoardDTO">
		INSERT INTO tbl_board(bno, type, title, video_code, video_img, view_content, search_content, writer, filecnt, ref)
		VALUES(seq_board.NEXTVAL, #{type}, #{title}, #{video_code}, #{video_img}, #{view_content}, #{search_content}, #{writer}, #{filecnt}, seq_board.CURRVAL)		
		<selectKey keyProperty="bno" resultType="Integer" order="AFTER">
			SELECT seq_board.CURRVAL FROM dual
		</selectKey>
	</insert>
	
	
	
	
	<update id="update">
		UPDATE tbl_board
		SET type = #{type},
			title = #{title},
			filecnt = #{filecnt},
			view_content = #{view_content},
			search_content = #{search_content},
			updatedate = SYSDATE
		WHERE bno = #{bno}
	</update>
	
	<update id="updateStep">
		UPDATE tbl_board
		SET re_step = re_step + 1
		WHERE ref = #{ref} AND re_step > #{re_step}
	</update>
	
	
	
	
	
	<insert id="answer">
		INSERT INTO tbl_board(bno, type, title, view_content, search_content, writer,filecnt, ref, re_step, re_level)
		VALUES(seq_board.NEXTVAL, #{type}, #{title}, #{view_content}, #{search_content}, #{writer}, #{filecnt}, #{ref}, #{re_step}, #{re_level})
		<selectKey keyProperty="bno" resultType="Integer" order="AFTER">
			SELECT seq_board.CURRVAL FROM dual
		</selectKey>
	</insert>
	<!-- keyProperty="bno" 셀릭트키의 결과값이 bno 에 담긴다  (숫자 리턴해줌)-->
	<!-- order="AFTER" 는 메인sql이 실행된 후에 작업하겠다 -->

	
	
	<!-- 첨부파일 저장 -->
	<insert id="addAttach">
		INSERT INTO tbl_attach(fullName, bno)
		VALUES(#{fullName}, seq_board.CURRVAL)
	</insert>
	
	<!-- view에 첨부파일 목록 띄우기 -->
	<select id="getAttach" resultType="String">
		SELECT fullName FROM tbl_attach
		WHERE bno = #{bno}
		ORDER BY regdate DESC
	</select>
	
	<!-- 첨부파일 삭제 (DB에서만 삭제함, 로컬에서는 안지워짐) -->
	<delete id="deleteAttach">
        DELETE
        FROM tbl_attach
        WHERE bno = #{bno}
	</delete>
	
	<!-- 첨부파일 수정(등록) -->
	<insert id="updateAttach">
		INSERT INTO tbl_attach(fullName, bno)
		VALUES(#{fullName}, #{bno})
	</insert>
	
    <!-- 하루전 첨부파일 목록 조회 -->
    <select id="getOldFiles" resultType="AttachDTO">
        SELECT * FROM tbl_attach
        WHERE #{ydate} = TO_CHAR(regdate, 'YYYYMMDD')
    </select>
	<!-- ydate의 날짜로된 첨부파일을 검색함 -->
</mapper>