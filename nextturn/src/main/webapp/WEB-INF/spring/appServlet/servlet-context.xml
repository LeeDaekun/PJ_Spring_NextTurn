<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.nextturn.controller" />
	<context:component-scan base-package="com.nextturn.service" /> <!-- IOC패턴을 하려면 있어야함 -->
	
	
	<!-- Google Mail Send -->
	<beans:bean id="mailSender"	class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com"/>
		<beans:property name="port" value="587" /> <!-- 465 or 25 -->
		<beans:property name="username" value="nextturn.games01@gmail.com" />
		<beans:property name="password" value="01031617755" />
		<beans:property name="defaultEncoding" value="utf-8" />
		<beans:property name="javaMailProperties">
			<beans:props>
					<beans:prop key="mail.transport.protocol">smtp</beans:prop>
					<beans:prop key="mail.smtp.auth">true</beans:prop>
					<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
					<beans:prop key="mail.debug">true</beans:prop>
				</beans:props>
			</beans:property>
	</beans:bean>
	<!-- web.xml이 실행되면서 디스패쳐서블릿을 생성하고, 서블릿컨텍스트를 읽고, 서블릿 컨텍스트에 있는 component-scan 가
	모든 IOC 패턴의 어노테이션들을 읽어서, 언제든지 수확해서 쓸수 있게 빈즈로 등록해놓는다 -->
	
	<!-- <context:component-scan base-package="com.nextturn.*" />  이렇하면 모든것을 읽을수 있는데,
	필요없는것은 빼야하니 컨트롤러랑 서비스만 등록해서 쓴다-->
	
	
	<!-- 어노테이션 붙이지않고 강제로 beans로 등록 -->
	<!-- Add Interceptor Beans -->
	<beans:bean id="loginInterceptor" class="com.nextturn.interceptor.LoginInterceptor"></beans:bean>
	
	<!-- URL Mapping for Interceptor call -->
	<!-- 이 URL로 들어온 애들은 인터셉터 클래스로 보낸다 -->
	<interceptors>
		<interceptor>
			<mapping path="/member/mypage"/>
			<mapping path="/member/update"/>
			<mapping path="/member/pwupdate"/>
			<mapping path="/member/drop"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
	</interceptors>
	
	
	
</beans:beans>
